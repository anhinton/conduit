% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pipeline.R
\name{addComponent}
\alias{addComponent}
\title{Add a new component to a pipeline}
\usage{
addComponent(newComponent, pipeline)
}
\arguments{
\item{newComponent}{\code{pipeline} or \code{module} object to be added}

\item{pipeline}{\code{pipeline} to be amended}
}
\value{
\code{pipeline} object
}
\description{
This function adds a new \code{module} or \code{pipeline} to a
\code{pipeline}'s components.
}
\examples{
## create a pipeline with one module
mod1 <- module(name = "setX", language = moduleLanguage("R"),
               description = "sets the value of x",
               outputs = list(
                   moduleOutput(
                       name = "x",
                       vessel = internalVessel("x"),
                       format = ioFormat("R character string"))),
               sources = list(
                   moduleSource(
                       vessel = scriptVessel("x <- \\"set\\""))))
pline1 <- pipeline(name = "trivialpipeline", components = list(mod1))
## create a new module
mod2 <- module("showY", language = moduleLanguage("R"),
               description = "displays the value of Y",
               inputs = list(
                   moduleInput(
                       name = "y",
                       vessel = internalVessel("y"),
                       format = ioFormat("R character string"))),
               sources = list(
                   moduleSource(
                       vessel = scriptVessel("print(y)"))))
## add new module to pipeline
pline1 <- addComponent(mod2, pline1)

}
\seealso{
\code{pipeline}, \code{module}
}

