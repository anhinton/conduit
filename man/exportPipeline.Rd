% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/pipeline.R
\name{exportPipeline}
\alias{exportPipeline}
\title{Export a pipeline and its components to disk}
\usage{
exportPipeline(pipeline, targetDirectory)
}
\arguments{
\item{pipeline}{A \code{pipeline} list}

\item{targetDirectory}{Output directory path}
}
\value{
A list of the XML file paths written
}
\description{
Exports a \code{pipeline} and its referenced \code{component}s to disk as
openapi XML files.
}
\details{
Creates a directory named for the \code{pipeline$name} in
\code{targetDirectory}, then saves \code{pipeline} and \code{component} XML
files in this directory.

As at 2014-08-12 the \code{pipeline} is always saved as \file{pipeline.xml}
no matter what the \code{pipeline} name.
}
\examples{
## create a pipeline
mod1 <- module(name = "setX", platform = "R",
               description = "sets the value of x",
               outputs = list(moduleOutput(name = "x", type = "internal",
					   format = "R character string")),
               sources = list(moduleSource(value = "x <- \\"set\\"")))
mod2 <- module("showY", platform = "R",
               description = "displays the value of Y",
               inputs = list(moduleInput(name = "y", type = "internal",
                                         format = "R character string")),
               sources = list(moduleSource(value = "print(y)")))
pline1 <- pipeline(name = "trivialpipeline", modules = list(mod1, mod2),
                   pipes = list(pipe("setX", "x", "showY", "y")))
outputDir <- tempdir()

## export the pipeline to 'outputDir'
exportPipeline(pline1, outputDir)
}
\seealso{
\code{pipeline}, \code{savePipeline}
}

