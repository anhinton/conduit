% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pipeline.R
\name{exportPipeline}
\alias{exportPipeline}
\title{Export a pipeline and its components to disk}
\usage{
exportPipeline(pipeline, targetDirectory)
}
\arguments{
\item{pipeline}{A \code{pipeline} list}

\item{targetDirectory}{Output directory path}
}
\value{
A list of the XML file paths written
}
\description{
Exports a \code{pipeline} and its referenced \code{component}s to
disk as OpenAPI XML files.
}
\details{
Creates a directory named for the \code{pipeline} in
    \code{targetDirectory}, then saves \code{pipeline} and
    \code{component} XML files in this directory.

The \code{pipeline} is exported as \file{pipeline.xml}, and the
components are exported as \file{COMPONENT_NAME.xml}.

This functions aims to produce self-contained pipelines with all
components available alongside the pipeline XML file.
}
\examples{
## create a pipeline
mod1 <- module(name = "setX", language = moduleLanguage("R"),
               description = "sets the value of x",
               outputs = list(
                   moduleOutput(
                       name = "x",
                       vessel = internalVessel("x"),
                       format = ioFormat("R character string"))),
               sources = list(
                   moduleSource(
                       vessel = scriptVessel("x <- \\"set\\""))))
mod2 <- module("showY", language = moduleLanguage("R"),
               description = "displays the value of Y",
               inputs = list(
                   moduleInput(
                       name = "y",
                       vessel = internalVessel("y"),
                       format = ioFormat("R character string"))),
               sources = list(
                   moduleSource(
                       vessel = scriptVessel("print(y)"))))
pline1 <- pipeline(name = "trivialpipeline", components = list(mod1, mod2), 
                   pipes = list(pipe("setX", "x", "showY", "y")))
outputDir <- tempdir()

## export the pipeline to 'outputDir'
exportPipeline(pline1, outputDir)

}
\seealso{
\code{pipeline}, \code{savePipeline}
}

