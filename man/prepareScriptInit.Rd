% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/R.R, R/bash.R, R/python2.R, R/python3.R, R/script.R
\name{prepareScriptInit.RModuleLanguage}
\alias{prepareScriptInit}
\alias{prepareScriptInit.RModuleLanguage}
\alias{prepareScriptInit.bashModuleLanguage}
\alias{prepareScriptInit.python2ModuleLanguage}
\alias{prepareScriptInit.python3ModuleLanguage}
\title{Create initScript for module source execution}
\usage{
\method{prepareScriptInit}{RModuleLanguage}(moduleLanguage)

\method{prepareScriptInit}{bashModuleLanguage}(moduleLanguage)

\method{prepareScriptInit}{python2ModuleLanguage}(moduleLanguage)

\method{prepareScriptInit}{python3ModuleLanguage}(moduleLanguage)

prepareScriptInit(moduleLanguage)
}
\arguments{
\item{moduleLanguage}{\code{moduleLanguage} object}
}
\value{
initScript character vector
}
\description{
Create initScript for module source execution
}
\details{
For each module language supported, conduit should produce an
initScript which produces a file \file{.languageVersion} in the
working directory. This file should contain four lines of text:

\enumerate{
    \item the exact version of the language used for execution
    \item \samp{1} if language did not meet minVersion, else \samp{0}
    \item \samp{1} if language did not meet maxVersion, else \samp{0}
    \item \samp{1} if language did not match version, else \samp{0}
}
}
\section{Methods (by class)}{
\itemize{
\item \code{RModuleLanguage}: Init script for R langage

\item \code{bashModuleLanguage}: Init script for bash script langage

\item \code{python2ModuleLanguage}: Init script for python2 langage

\item \code{python3ModuleLanguage}: Init script for python3 langage
}}
\seealso{
\code{getExecLanguageVersion}
}

