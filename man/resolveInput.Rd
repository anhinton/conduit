% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/module.R
\name{resolveInput.internal}
\alias{resolveInput}
\alias{resolveInput.file}
\alias{resolveInput.internal}
\alias{resolveInput.url}
\title{Resolve input object}
\usage{
\method{resolveInput}{internal}(moduleInput, inputObjects, host, location)

\method{resolveInput}{file}(moduleInput, inputObjects, host, location)

\method{resolveInput}{url}(moduleInput, inputObjects, host, location)

resolveInput(moduleInput, inputObjects, host, location)
}
\arguments{
\item{moduleInput}{\code{moduleInput} object}

\item{inputObjects}{resources to be supplied as inputs}

\item{host}{module host}

\item{location}{location of originating module file}
}
\value{
TRUE if successful
}
\description{
This function ensures that an input object is where it needs to be
for a module's source script to be executed. Returns TRUE if all is well.
}
\details{
If the \code{moduleInput$vessel} is any of \itemize{
  \item{a \code{fileVessel} containing a relative \code{ref}}
  \item{an \code{internalVessel}, and \code{host} is not NULL}}
the \code{inputObject} corresponding to \code{moduleInput$name} is copied
to the current working directory.

If \code{host} is not NULL this \code{moduleInput} is also copied
to the module output directory on the remote host.

If \code{moduleInput$vessel} is a \code{urlVessel} produces error if
URL specified in \code{inputObjects} does not match URL in
\code{moduleInput}.
}
\section{Methods (by class)}{
\itemize{
\item \code{internal}: Resolve internal input object

\item \code{file}: Resolve file input object

\item \code{url}: Resolve URL input object
}}

