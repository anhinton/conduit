% Generated by roxygen2 (5.0.1): do not edit by hand
% Please edit documentation in R/module.R
\name{runModule}
\alias{runModule}
\title{Execute a \code{module}'s source(s)}
\usage{
runModule(module, inputObjects = list(), targetDirectory = getwd())
}
\arguments{
\item{module}{\code{module} object}

\item{inputObjects}{Named list of input objects}

\item{targetDirectory}{File path for module output}
}
\description{
Execute the scripts contained in or referenced by a \code{module}'s sources.
}
\details{
This function:
\itemize{
  \item creates a directory for the \code{module}'s outputs
  \item determines which language the module script requires
  \item executes the \code{module}'s source(s) using this language
}

If the \code{module} has inputs the \code{inputObjects} list must
have a named absolute file location for each input (except for
inputs from \code{fileVessel}s with absolute 'ref's).

\code{targetDirectory} must exist or the function will return an error.

This function creates a directory called \sQuote{modules} in
the \code{targetDirectory} if it does not already exist.

If \code{module$host} is not NULL the remote host must exist and be
accessible by conduit or this function will fail.
}
\examples{
## run a module with no inputs
mod1xml <- system.file("extdata", "simpleGraph", "createGraph.xml",
		       package = "conduit")
mod1 <- loadModule("createGraph",
		      ref = mod1xml)
(outputs1 <- runModule(module = mod1, targetDirectory = tempdir()))

## run a module with inputs
mod2xml <- system.file("extdata", "simpleGraph", "layoutGraph.xml",
		          package = "conduit")
mod2 <- loadModule("layoutGraph", ref = mod2xml)

## mod2 input names
names(mod2$inputs)
mod2inputs <- outputs1$directedGraph$object
names(mod2inputs) <- names(mod2$inputs)

runModule(module = mod2, inputObjects = mod2inputs,
          targetDirectory = tempdir())
}
\seealso{
\code{module}, \code{moduleSource}
}

