% Generated by roxygen2 (4.0.2): do not edit by hand
\name{runPipeline}
\alias{runPipeline}
\title{Run a pipeline}
\usage{
runPipeline(pipeline)
}
\arguments{
\item{pipeline}{A \code{pipeline} object}
}
\value{
Meaningless list. TODO: fix what \code{runPipeline},
\code{runModule}, \code{runPlatform} return.
}
\description{
Executes a \code{pipeline}'s \code{component}s.
}
\details{
This function creates a directory called \code{pipeline$name} in
\file{pipelines}, in the working directory. If the directory \file{pipelines}
does not exist in the working directory it will be created. Working files
and output from the pipeline's \code{components} will be stored in the
named directory.

First the function will determine the order in which its components are to
be run. Note that the \code{pipeline} is not allowed to have any cycles or
the function will fail.

The function then produces a list of inputs required by the
\code{component}s, and resolves the (intended) location of these.

Finally the function executes each \code{component} in the order determined,
by passing each component and the inputs list to \code{runComponent}.
}
\examples{
simpleGraph <-
    loadPipeline(name = "simpleGraph",
                 ref = system.file("extdata", "simpleGraph",
                                   "simpleGraph-pipeline.xml",
                                    package = "conduit"))
## run example in temp directory
oldwd <- setwd(tempdir())

## run the pipeline
runPipeline(simpleGraph)
## observe results
list.files(file.path(tempdir(), "pipelines"), recursive = TRUE)
setwd(oldwd)
}
\seealso{
\code{pipeline}, \code{runComponent}
}

